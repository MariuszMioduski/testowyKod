<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd"
         version="6.0">


    <servlet>
        <servlet-name>FacesServlet</servlet-name>
        <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>FacesServlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.xhtml</welcome-file>
    </welcome-file-list>

    <context-param>
        <!-- With this set empty field values are covenrted to null, not empty strings ("")-->
        <param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <!-- This is to omit resolving EL expressions within XHTML comments -->
        <param-name>jakarta.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <!-- When set to Development, JSF provides more debugging info on pages (ie. not caught messages are displayed) -->
        <param-name>jakarta.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
        <!--        <param-value>Production</param-value>-->
    </context-param>

<!--    <context-param>-->
<!--        <param-name>primefaces.THEME</param-name>-->
<!--        <param-value>saga</param-value>-->
<!--    </context-param>-->




    <!-- These are to determine account type or vehicle type in forms, to display their properties
    (primarily to include or not extended object descriptions)
    It's actually replication of DiscriminatorValue for given entity class.
    It's kinda dirty, but we have to manage it somehow -->
<!--    <context-param>-->
<!--        <param-name>accountAdminRoleName</param-name>-->
<!--        <param-value>ADMIN</param-value>-->
<!--    </context-param>-->
<!--    <context-param>-->
<!--        <param-name>accountEmployeeRoleName</param-name>-->
<!--        <param-value>EMPLOYEE</param-value>-->
<!--    </context-param>-->
<!--    <context-param>-->
<!--        <param-name>accountClientRoleName</param-name>-->
<!--        <param-value>CLIENT</param-value>-->
<!--    </context-param>-->

<!--    <security-role>-->
<!--        <role-name>ADMIN</role-name>-->
<!--    </security-role>-->
<!--    <security-role>-->
<!--        <role-name>EMPLOYEE</role-name>-->
<!--    </security-role>-->
<!--    <security-role>-->
<!--        <role-name>CLIENT</role-name>-->
<!--    </security-role>-->

<!--    <error-page>-->
<!--        <error-code>403</error-code>-->
<!--        <location>/error/error403.xhtml</location>-->
<!--    </error-page>-->

<!--    <error-page>-->
<!--        <error-code>404</error-code>-->
<!--        <location>/error/error404.xhtml</location>-->
<!--    </error-page>-->

<!--    <error-page>-->
<!--        <error-code>500</error-code>-->
<!--        <location>/error/error.xhtml</location>-->
<!--    </error-page>-->

<!--    <error-page>-->
<!--        <exception-type>jakarta.faces.FacesException</exception-type>-->
<!--        <location>/error/error.xhtml</location>-->
<!--    </error-page>-->

<!--    <error-page>-->
<!--        <exception-type>jakarta.servlet.ServletException</exception-type>-->
<!--        <location>/error/error.xhtml</location>-->
<!--    </error-page>-->

<!--    <error-page>-->
<!--        <exception-type>java.lang.RuntimeException</exception-type>-->
<!--        <location>/error/error.xhtml</location>-->
<!--    </error-page>-->
</web-app>